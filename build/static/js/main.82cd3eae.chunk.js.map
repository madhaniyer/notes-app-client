{"version":3,"sources":["containers/Home.js","components/LoaderButton.js","containers/Login.js","containers/NotFound.js","components/AppliedRoute.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/Signup.js","config.js","lib/awsLib.js","containers/NewNote.js","containers/Notes.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","notes","isAuthenticated","setState","alert","_context","t0","API","get","concat","map","note","i","react_default","a","createElement","lib","key","noteid","to","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","className","Link","PageHeader","ListGroup","renderNotesList","renderNotes","renderLander","Component","components_LoaderButton","_ref","text","loadingText","_ref$className","_ref$disabled","disabled","objectWithoutProperties","Button","assign","Glyphicon","glyph","Login","handleChage","event","defineProperty","target","id","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","preventDefault","Auth","signIn","email","password","userHasAuthenticated","message","stop","_x","apply","arguments","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","validateForm","containers_NotFound","AppliedRoute","C","component","cProps","rest","Route","render","AuthenticatedRoute","Redirect","location","pathname","search","UnauthenticatedRoute","redirect","name","url","undefined","window","href","replace","results","RegExp","exec","decodeURIComponent","querystring","Signup","handleChange","newUser","signUp","username","sent","handelConfirmationSubmit","_ref2","_callee2","_context2","confirmSignUp","confirmPassword","userHasAuntheticated","history","push","_x2","confirmationCode","HelpBlock","validateConfirmationForm","renderForm","renderConfirmation","config","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","MAX_ATTACHMENT_SIZE","s3Upload","_s3Upload","file","filename","stored","now","Storage","vault","put","contentType","abrupt","NewNote","handleFileChange","files","attachment","size","createNote","t1","post","body","componentClass","bsStyle","Notes","saveNote","handleDelete","confirm","isDeleting","deleteNote","attachmentURL","getNote","_context3","match","params","str","del","Static","rel","formatFilename","onClick","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","handleLogout","signOut","isAuthenticating","bind","assertThisInitialized","currentSession","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","react","withRouter","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82cd3eae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {Link} from \"react-router-dom\"\nimport { API } from \"aws-amplify\";\nimport \"./Home.css\";\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      notes: []\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.props.isAuthenticated) {\n      return;\n    }\n  \n    try {\n      const notes = await this.notes();\n      this.setState({ notes });\n    } catch (e) {\n      alert(e);\n    }\n  \n    this.setState({ isLoading: false });\n  }\n  \n  notes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n  \n\n  renderNotesList(notes) {\n    return [{}].concat(notes).map(\n      (note, i) =>\n        i !== 0\n          ? <LinkContainer\n              key={note.noteid}\n              to={`/notes/${note.noteid}`}\n            >\n              <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n                {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n              </ListGroupItem>\n            </LinkContainer>\n          : <LinkContainer\n              key=\"new\"\n              to=\"/notes/new\"\n            >\n              <ListGroupItem>\n                <h4>\n                  <b>{\"\\uFF0B\"}</b> Create a new note\n                </h4>\n              </ListGroupItem>\n            </LinkContainer>\n    );\n  }\n  \n\n  renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Scratch</h1>\n        <p>A simple note taking app</p>\n        <div>\n          <Link to=\"/login\" className=\"btn btn-info btn-lg\">\n            Login\n          </Link>\n          <Link to=\"/signup\" className=\"btn btn-success btn-lg\">\n            Signup\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  \n\n  renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Notes</PageHeader>\n        <ListGroup>\n          {!this.state.isLoading && this.renderNotesList(this.state.notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        {this.props.isAuthenticated ? this.renderNotes() : this.renderLander()}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport {Button, Glyphicon} from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default({\n    isLoading,\n    text,\n    loadingText,\n    className = \"\",\n    disabled = false,\n    ...props\n}) => \n    <Button\n        className={`LoaderButton ${className}`}\n        disabled={disabled || isLoading}\n        {...props}\n    >\n        {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n        {!isLoading ? text : loadingText}\n    </Button>;","import React, { Component } from 'react';\nimport {FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\nimport {Auth} from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading: false,\n            email: \"\",\n            password: \"\"\n         };\n    }\n    validateForm() {\n        return this.state.email.length>0 && this.state.password.length>0;\n    }\n\n    handleChage = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        this.setState({isLoading: true});\n\n        try {\n            await Auth.signIn(this.state.email,this.state.password);\n            this.props.userHasAuthenticated(true);\n            //this.props.history.push(\"/\");\n        } catch(e) {\n            alert(e.message);\n            this.setState({isLoading: false});\n        }\n    }\n\n    render() { \n        return (  \n            <div className=\"Login\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"email\" bsSize=\"large\">\n                        <ControlLabel>Email</ControlLabel>\n                        <FormControl \n                            autoFocus\n                            type=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleChage}\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"password\" bsSize=\"large\">\n                        <ControlLabel>Password</ControlLabel>\n                        <FormControl \n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChage}\n                        />   \n                    </FormGroup>\n                    <LoaderButton \n                        block\n                        bsSize=\"large\"\n                        disabled={!this.validateForm()}\n                        type=\"submit\" \n                        isLoading={this.state.isLoading}\n                        text=\"Login\"\n                        loadingText=\"Logging in...\"\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default Login;","import React from 'react';\nimport './NotFound.css';\n\nexport default () => \n    <div className=\"NotFound\">\n        <h3> Sorry, Page not found</h3>\n    </div>\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\n\nexport default ({component: C, props: cProps, ...rest}) => \n<Route {...rest} render={props => <C {...props} {...cProps}/>} />;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated\n        ? <C {...props} {...cProps} />\n        : <Redirect\n            to={`/login?redirect=${props.location.pathname}${props.location\n              .search}`}\n          />}\n  />;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n  \n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n  \n    if (!results) {\n      return null;\n    }\n    if (!results[2]) {\n      return \"\";\n    }\n  \n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n  \n  export default ({ component: C, props: cProps, ...rest }) => {\n    const redirect = querystring(\"redirect\");\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          !cProps.isAuthenticated\n            ? <C {...props} {...cProps} />\n            : <Redirect\n                to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n              />}\n      />\n    );\n  };\n  ","import React, { Component } from 'react';\nimport {HelpBlock, FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\nimport {Auth} from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Signup.css\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            confirmationCode: \"\",\n            newUser: null\n        };\n    }\n\n    validateForm(){\n        return (\n            this.state.email.length > 0 &&\n            this.state.password.length > 0 &&\n            this.state.password === this.state.confirmPassword\n        );\n    }\n\n    validateConfirmationForm() {\n        return this.state.confirmationCode.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.id]: event.target.value}); \n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        this.setState({isLoading: true});\n        try {\n            const newUser = await Auth.signUp ({\n                username: this.state.email,\n                password: this.state.password\n            });\n            this.setState({\n                newUser\n            });\n        } catch(e) {\n            alert(e.message);\n        }\n        this.setState({newUser: \"test\"});\n\n        this.setState({isLoading: false});\n    }\n\n    handelConfirmationSubmit = async event => {\n        event.preventDefault();\n        this.setState({isLoading: true});\n        try {\n            await Auth.confirmSignUp(this.state.email,this.state.confirmPassword);\n            await Auth.signIn(this.state.email,this.state.password);\n            this.props.userHasAuntheticated(true);\n            this.props.history.push(\"/\");\n        } catch(e) {\n            alert(e.message);\n            this.setState({isLoading: false});\n        }\n        \n    }\n\n    renderConfirmation() {\n        return(\n            <form onSubmit={this.handelConfirmationSubmit}>\n                <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n                    <ControlLabel>Confirmation Code</ControlLabel>\n                    <FormControl\n                        autoFocus\n                        type=\"tel\"\n                        value={this.state.confirmationCode}\n                        onChange={this.handleChange}\n                    />\n                    <HelpBlock>Please check your email for the code.</HelpBlock>\n                </FormGroup>\n                <LoaderButton\n                    block\n                    bsSize=\"large\"\n                    disabled={!this.validateConfirmationForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Verify\"\n                    loadingText=\"Verifying\"\n                />\n            </form>\n        );\n    }\n    renderForm() {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                    <ControlLabel>Email</ControlLabel>\n                    <FormControl\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        autoFocus\n                        type=\"email\"\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                    <ControlLabel>Password</ControlLabel>\n                    <FormControl\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n                    <ControlLabel>Confirm password</ControlLabel>\n                    <FormControl\n                        value={this.state.confirmPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <LoaderButton\n                    block\n                    bsSize=\"large\"\n                    disabled={!this.validateForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Sign Up\"\n                    loadingText=\"Signing up\"\n                />\n            </form>\n        );\n    }\n    render() { \n        return (  \n            <div className=\"Signup\">\n                {\n                    this.state.newUser === null ?\n                        this.renderForm() : this.renderConfirmation()\n                }\n            </div>\n\n        );\n    }\n}\n \nexport default Signup;\n","export default {\n    s3: {\n        REGION: \"us-east-2\",\n        BUCKET: \"upload-notes-app-bucket\",\n    },\n    apiGateway: {\n        REGION: \"us-east-2\",\n        URL: \"https://s1yy8m4t99.execute-api.us-east-2.amazonaws.com/dev\"\n    },\n    cognito: {\n        REGION: \"us-east-2\",\n        USER_POOL_ID: \"us-east-2_WqPdbYHCZ\",\n        APP_CLIENT_ID: \"6jv3dtb4dqd7tjsot96oq4uh7e\",\n        IDENTITY_POOL_ID: \"us-east-2:f68e8c2c-a6ab-470d-bae0-fe3a77173650\"\n    },\n    MAX_ATTACHMENT_SIZE: 5000000\n}","import {Storage} from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n    const filename = `${Date.now()}-${file.name}`;\n    const stored = await Storage.vault.put(filename, file, {\n        contentType: file.type\n    });\n\n    return stored.key;\n}","import React, { Component } from 'react';\nimport {FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport { API } from \"aws-amplify\";\nimport \"./NewNote.css\";\nimport { s3Upload } from '../lib/awsLib';\n\nclass NewNote extends Component {\n    constructor(props) {\n        super(props);\n\n        this.file=null;\n\n        this.state = { \n            isLoading: null,\n            content: \"\"\n         };\n    }\n\n    validateForm() {\n        return this.state.content.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.id]: event.target.value}); \n    }\n\n    handleFileChange = event => {\n        this.file = event.target.files[0];\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        if(this.file && this.file.size>config.MAX_ATTACHMENT_SIZE) {\n            alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE/1000000} MB`);\n            return;\n        }\n\n        this.setState({ isLoading: true});\n\n        try {\n            \n            const attachment = this.file\n            ? await s3Upload(this.file) \n            : null;\n\n            await this.createNote({\n                attachment,\n                content: this.state.content\n            });\n            this.props.history.push(\"/\");\n        } catch(e) {\n            alert(e);\n            this.setState({isLoading: false});\n        }\n    } \n\n    createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n            body:note\n        });\n    }\n\n    render() { \n        return ( \n            <div className=\"NewNote\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"content\">\n                        <FormControl\n                            value={this.state.content}\n                            onChange={this.handleChange}\n                            componentClass=\"textarea\"\n                        />\n                    </FormGroup>\n                    <FormGroup controlId=\"file\">\n                        <ControlLabel>Attachment</ControlLabel>\n                        <FormControl\n                            onChange={this.handleFileChange}\n                            type=\"file\"\n                        />\n                    </FormGroup>\n                    <LoaderButton\n                        block\n                        bsStyle=\"primary\"\n                        bsSize=\"large\"\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                        text=\"Create\"\n                        loadingText=\"Creating...\"\n                    />\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default NewNote;","import React, { Component } from \"react\";\nimport { API, Storage } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../lib/awsLib\";\n\nexport default class Notes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.file = null;\n\n    this.state = {\n        isLoading: null,\n        isDeleting: null,\n        note: null,\n        content: \"\",\n        attachmentURL: null\n      };\n      \n  }\n\n  async componentDidMount() {\n    try {\n      let attachmentURL;\n      const note = await this.getNote();\n      const { content, attachment } = note;\n\n      if (attachment) {\n        attachmentURL = await Storage.vault.get(attachment);\n      }\n\n      this.setState({\n        note,\n        content,\n        attachmentURL\n      });\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  getNote() {\n    return API.get(\"notes\", `/notes/${this.props.match.params.id}`);\n  }\n\n  validateForm() {\n    return this.state.content.length > 0;\n  }\n  \n  formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n  \n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n  \n  handleFileChange = event => {\n    this.file = event.target.files[0];\n  }\n  \n  saveNote(note) {\n    return API.put(\"notes\", `/notes/${this.props.match.params.id}`, {\n      body: note\n    });\n  }\n  \n  handleSubmit = async event => {\n    let attachment;\n  \n    event.preventDefault();\n  \n    if (this.file && this.file.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE/1000000} MB.`);\n      return;\n    }\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      if (this.file) {\n        attachment = await s3Upload(this.file);\n      }\n  \n      await this.saveNote({\n        content: this.state.content,\n        attachment: attachment || this.state.note.attachment\n      });\n      this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n  \n  deleteNote() {\n    return API.del(\"notes\", `/notes/${this.props.match.params.id}`);\n  }\n  \n  handleDelete = async event => {\n    event.preventDefault();\n  \n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this note?\"\n    );\n  \n    if (!confirmed) {\n      return;\n    }\n  \n    this.setState({ isDeleting: true });\n  \n    try {\n      await this.deleteNote();\n      this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      this.setState({ isDeleting: false });\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"Notes\">\n        {this.state.note &&\n          <form onSubmit={this.handleSubmit}>\n            <FormGroup controlId=\"content\">\n              <FormControl\n                onChange={this.handleChange}\n                value={this.state.content}\n                componentClass=\"textarea\"\n              />\n            </FormGroup>\n            {this.state.note.attachment &&\n              <FormGroup>\n                <ControlLabel>Attachment</ControlLabel>\n                <FormControl.Static>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={this.state.attachmentURL}\n                  >\n                    {this.formatFilename(this.state.note.attachment)}\n                  </a>\n                </FormControl.Static>\n              </FormGroup>}\n            <FormGroup controlId=\"file\">\n              {!this.state.note.attachment &&\n                <ControlLabel>Attachment</ControlLabel>}\n              <FormControl onChange={this.handleFileChange} type=\"file\" />\n            </FormGroup>\n            <LoaderButton\n              block\n              bsStyle=\"primary\"\n              bsSize=\"large\"\n              disabled={!this.validateForm()}\n              type=\"submit\"\n              isLoading={this.state.isLoading}\n              text=\"Save\"\n              loadingText=\"Saving…\"\n            />\n            <LoaderButton\n              block\n              bsStyle=\"danger\"\n              bsSize=\"large\"\n              isLoading={this.state.isDeleting}\n              onClick={this.handleDelete}\n              text=\"Delete\"\n              loadingText=\"Deleting…\"\n            />\n          </form>}\n      </div>\n    );\n  }\n  \n}\n","import React from \"react\";\nimport {Switch} from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport  NotFound from \"./containers/NotFound\";\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Notes from \"./containers/Notes\";\n\n//<Route path=\"/\" exact component={Home} />\n//<Route path=\"/login\" exact component={Login} />\nexport default ({childProps}) => \n<Switch> \n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />} />\n    <UnauthenticatedRoute path=\"/login\" exact component={Login} props={childProps} />\n    <UnauthenticatedRoute path=\"/signup\" exact component={Signup} props={childProps} />\n    <AuthenticatedRoute path=\"/notes/new\" exact component={NewNote} props={childProps} />\n    <AuthenticatedRoute path=\"/notes/:id\" exact component={Notes} props={childProps} />\n    <AppliedRoute component={NotFound}/>\n</Switch>","import React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Auth} from \"aws-amplify\";\nimport Routes from \"./Routes\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) { \n    super(props);\n    this.state = { \n      isAuthenticated: false,\n      isAuthenticating: true\n    };\n    this.userHasAuthenticated = this.userHasAuthenticated.bind(this);\n\n  }\n\n  async componentDidMount() {\n    try {\n      await Auth.currentSession();\n      this.userHasAuthenticated(true);\n    }\n    catch(e) {\n      if(e !== 'No current user') {\n        alert(e);\n      }\n    }\n    this.setState({isAuthenticating:false});\n  }\n\n  userHasAuthenticated = authenticated => { \n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  handleLogout = async event => {\n    await Auth.signOut();\n    this.userHasAuthenticated(false);\n    this.props.history.push(\"/login\");\n  }\n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Scratch</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              { \n                this.state.isAuthenticated ?\n                <NavItem onClick={this.handleLogout}>Logout</NavItem> \n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                    <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                      <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps}/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Amplify from \"aws-amplify\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport config from \"./config\";\n\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n        region: config.s3.REGION,\n        bucket: config.s3.BUCKET,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID\n    },\n    API: {\n        endpoints : [\n            {\n                name: \"notes\",\n                endpoint: config.apiGateway.URL,\n                region: config.apiGateway.REGION\n            }\n        ]\n    }\n}\n);\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n  );\n  \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}